{"version":3,"sources":["utils/common.js","components/Login.js","components/Register.js","router/AppRouter.js","utils/constants.js","reducers/auth.js","store/store.js","index.js"],"names":["validateFields","fieldsToValidate","every","field","Object","values","Login","state","email","password","errorMsg","handleLogin","event","preventDefault","setState","sigin_error","handleInputChange","target","name","value","this","className","onSubmit","Form","Group","controlId","Label","Control","type","placeholder","onChange","Button","variant","to","Component","connect","Register","first_name","last_name","cpassword","successMsg","isSubmitted","registerUser","signup_error","React","auth","path","component","exact","SIGN_IN","SIGN_OUT","authReducer","action","user","composeEnhancers","window","_REDUX_DEVTOOLS_EXTENSION_COMPOSE_","compose","store","createStore","combineReducers","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4ae9e6b0.chunk.js","sourcesContent":["export const validateFields = (fieldsToValidate)=>{\r\n    return fieldsToValidate.every((field) => Object.values(field)[0] !== '')\r\n}","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { validateFields } from \"../utils/common\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n    errorMsg: \"\",\r\n  };\r\n\r\n  handleLogin = (event) => {\r\n    event.preventDefault();\r\n    const { email, password } = this.state;\r\n    const fieldsToValidate = [{ email }, { password }];\r\n\r\n    const allFieldsEntered = validateFields(fieldsToValidate);\r\n    if (!allFieldsEntered) {\r\n      this.setState({\r\n        errorMsg: {\r\n          sigin_error: \"Please fill all the fields.\",\r\n        },\r\n      });\r\n    } else {\r\n      this.setState({\r\n        errorMsg: {\r\n          sigin_error: \"\",\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n  render() {\r\n    const { errorMsg } = this.state;\r\n    return (\r\n      <div className=\"login-page\">\r\n        <h1>Banking Application</h1>\r\n        <div className=\"login-form\">\r\n          <form onSubmit={this.handleLogin}>\r\n            {errorMsg && errorMsg.sigin_error && (\r\n              <p className=\"errorMsg centered-message\">\r\n                {errorMsg.sigin_error}\r\n              </p>\r\n            )}\r\n            <Form.Group controlId=\"email\">\r\n              <Form.Label>Email address</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                name=\"email\"\r\n                placeholder=\"Enter email\"\r\n                onChange={this.handleInputChange}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"password\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                name=\"password\"\r\n                placeholder=\"Enter password\"\r\n                onChange={this.handleInputChange}\r\n              />\r\n            </Form.Group>\r\n            <div className=\"action-items\">\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                Login\r\n              </Button>\r\n              <Link to=\"/register\" className=\"btn btn-secondary\">\r\n                Create account\r\n              </Link>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect()(Login);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { validateFields } from '../utils/common';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Register extends React.Component {\r\n  state = {\r\n    first_name: '',\r\n    last_name: '',\r\n    email: '',\r\n    password: '',\r\n    cpassword: '',\r\n    successMsg: '',\r\n    errorMsg: '',\r\n    isSubmitted: false\r\n  };\r\n\r\n  registerUser = (event) => {\r\n    event.preventDefault();\r\n    const { first_name, last_name, email, password, cpassword } = this.state;\r\n\r\n    const fieldsToValidate = [\r\n      { first_name },\r\n      { last_name },\r\n      { email },\r\n      { password },\r\n      { cpassword }\r\n    ];\r\n\r\n    const allFieldsEntered = validateFields(fieldsToValidate);\r\n    if (!allFieldsEntered) {\r\n      this.setState({\r\n        errorMsg: {\r\n          signup_error: 'Please enter all the fields.'\r\n        }\r\n      });\r\n    } else {\r\n      if (password !== cpassword) {\r\n        this.setState({\r\n          errorMsg: {\r\n            signup_error: 'Password and confirm password does not match.'\r\n          }\r\n        });\r\n      } else {\r\n        this.setState({ isSubmitted: true });\r\n      }\r\n    }\r\n  };\r\n\r\n  handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { errorMsg, successMsg, isSubmitted } = this.state;\r\n    return (\r\n      <div className=\"login-page\">\r\n        <h2>Register User</h2>\r\n        <div className=\"login-form\">\r\n          <Form onSubmit={this.registerUser}>\r\n            {errorMsg && errorMsg.signup_error ? (\r\n              <p className=\"errorMsg centered-message\">\r\n                {errorMsg.signup_error}\r\n              </p>\r\n            ) : (\r\n              isSubmitted && (\r\n                <p className=\"successMsg centered-message\">{successMsg}</p>\r\n              )\r\n            )}\r\n            <Form.Group controlId=\"first_name\">\r\n              <Form.Label>First name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"first_name\"\r\n                placeholder=\"Enter first name\"\r\n                onChange={this.handleInputChange}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"last_name\">\r\n              <Form.Label>Last name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"last_name\"\r\n                placeholder=\"Enter last name\"\r\n                onChange={this.handleInputChange}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"email\">\r\n              <Form.Label>Email address</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                name=\"email\"\r\n                placeholder=\"Enter email\"\r\n                onChange={this.handleInputChange}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"password\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                name=\"password\"\r\n                placeholder=\"Enter password\"\r\n                onChange={this.handleInputChange}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"cpassword\">\r\n              <Form.Label>Confirm password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                name=\"cpassword\"\r\n                placeholder=\"Enter confirm password\"\r\n                onChange={this.handleInputChange}\r\n              />\r\n            </Form.Group>\r\n            <div className=\"action-items\">\r\n            <Button variant=\"primary\" type=\"submit\">\r\n                Register\r\n              </Button>\r\n              <Link to=\"/\" className=\"btn btn-secondary\">\r\n                Login\r\n              </Link>\r\n            </div>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect()(Register);","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Route, Switch, BrowserRouter } from \"react-router-dom\";\r\nimport Login from \"../components/Login\";\r\nimport Register from \"../components/Register\";\r\n\r\nconst AppRouter = () => {\r\n  return (\r\n    <BrowserRouter>\r\n      <div className=\"container\">\r\n        <Switch>\r\n          <Route path=\"/\" component={Login} exact={true} />\r\n          <Route path=\"/register\" component={Register} />\r\n        </Switch>\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps)(AppRouter);\r\n","export const SIGN_IN = 'SIGN_IN';\r\nexport const SIGN_OUT = 'SIGN_OUT';","import { SIGN_IN, SIGN_OUT } from \"../utils/constants\";\r\n\r\nconst authReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case SIGN_IN:\r\n      return action.user;\r\n    case SIGN_OUT:\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","import {createStore, combineReducers, applyMiddleware, compose} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport authReducer from \"../reducers/auth\";\r\n\r\nconst composeEnhancers = window._REDUX_DEVTOOLS_EXTENSION_COMPOSE_ || compose;\r\nconst store = createStore(\r\n    combineReducers({\r\n        auth: authReducer\r\n    }),\r\n    composeEnhancers(applyMiddleware(thunk))\r\n)\r\n\r\nexport default store;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n// import App from \"./App\";\nimport AppRouter from \"./router/AppRouter\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store/store\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./css/main.scss\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <AppRouter />\n  </Provider>,\n\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}